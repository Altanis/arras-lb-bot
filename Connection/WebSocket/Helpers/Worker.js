const { parentPort } = require('node:worker_threads');

! function(m, x) {
	x = x(m);
	parentPort.on('message', function(d) {
		d = { data: d };

		for (var b = d.data[1], a = new Uint8Array(6 + b.length), c = 0; c < b.length; c++) a[c + 6] = b.charCodeAt(c);
		for (b = 0; 1073741824 > b; b++)
			for (a[0] = 48 + (63 & b >> 24), a[1] = 48 + (63 & b >> 18), a[2] = 48 + (63 & b >> 12), a[3] = 48 + (63 & b >> 6), a[4] = 48 + (63 & b), c = 0; 64 > c; c++)
				if (a[5] = 48 + c, 0 === (new Uint16Array(x(a.buffer)))[0]) {
					parentPort.postMessage([d.data[0], String.fromCharCode(a[0], a[1], a[2], a[3], a[4], a[5])]);
					return;
				}
	});
}(function(s, f, b) {
	'use asm';
	var A = 0,
		B = 0,
		C = 0,
		D = 0,
		E = 0,
		F = 0,
		G = 0,
		H = 0,
		I = 0,
		J = 0;
	var K = new s.Uint8Array(b);

	function z(j) {
		j = j | 0;
		var w0 = 0,
			w1 = 0,
			w2 = 0,
			w3 = 0,
			w4 = 0,
			w5 = 0,
			w6 = 0,
			w7 = 0,
			w8 = 0,
			w9 = 0,
			w10 = 0,
			w11 = 0,
			w12 = 0,
			w13 = 0,
			w14 = 0,
			w15 = 0;
		var a = 0,
			b = 0,
			c = 0,
			d = 0,
			e = 0,
			f = 0,
			g = 0,
			h = 0;
		w0 = K[j | 0] << 24 | K[j | 1] << 16 | K[j | 2] << 8 | K[j | 3];
		w1 = K[j | 4] << 24 | K[j | 5] << 16 | K[j | 6] << 8 | K[j | 7];
		w2 = K[j | 8] << 24 | K[j | 9] << 16 | K[j | 10] << 8 | K[j | 11];
		w3 = K[j | 12] << 24 | K[j | 13] << 16 | K[j | 14] << 8 | K[j | 15];
		w4 = K[j | 16] << 24 | K[j | 17] << 16 | K[j | 18] << 8 | K[j | 19];
		w5 = K[j | 20] << 24 | K[j | 21] << 16 | K[j | 22] << 8 | K[j | 23];
		w6 = K[j | 24] << 24 | K[j | 25] << 16 | K[j | 26] << 8 | K[j | 27];
		w7 = K[j | 28] << 24 | K[j | 29] << 16 | K[j | 30] << 8 | K[j | 31];
		w8 = K[j | 32] << 24 | K[j | 33] << 16 | K[j | 34] << 8 | K[j | 35];
		w9 = K[j | 36] << 24 | K[j | 37] << 16 | K[j | 38] << 8 | K[j | 39];
		w10 = K[j | 40] << 24 | K[j | 41] << 16 | K[j | 42] << 8 | K[j | 43];
		w11 = K[j | 44] << 24 | K[j | 45] << 16 | K[j | 46] << 8 | K[j | 47];
		w12 = K[j | 48] << 24 | K[j | 49] << 16 | K[j | 50] << 8 | K[j | 51];
		w13 = K[j | 52] << 24 | K[j | 53] << 16 | K[j | 54] << 8 | K[j | 55];
		w14 = K[j | 56] << 24 | K[j | 57] << 16 | K[j | 58] << 8 | K[j | 59];
		w15 = K[j | 60] << 24 | K[j | 61] << 16 | K[j | 62] << 8 | K[j | 63];
		a = A;
		b = B;
		c = C;
		d = D;
		e = E;
		f = F;
		g = G;
		h = H;
		h = (w0 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0x428a2f98) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		g = (w1 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0x71374491) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		f = (w2 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0xb5c0fbcf) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		e = (w3 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0xe9b5dba5) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		d = (w4 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x3956c25b) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		c = (w5 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0x59f111f1) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		b = (w6 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x923f82a4) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		a = (w7 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0xab1c5ed5) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		h = (w8 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0xd807aa98) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		g = (w9 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0x12835b01) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		f = (w10 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0x243185be) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		e = (w11 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0x550c7dc3) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		d = (w12 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x72be5d74) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		c = (w13 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0x80deb1fe) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		b = (w14 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x9bdc06a7) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		a = (w15 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0xc19bf174) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w0 = ((w1 >>> 7 ^ w1 >>> 18 ^ w1 >>> 3 ^ w1 << 25 ^ w1 << 14) + (w14 >>> 17 ^ w14 >>> 19 ^ w14 >>> 10 ^ w14 << 15 ^ w14 << 13) + w0 + w9) | 0;
		h = (w0 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0xe49b69c1) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w1 = ((w2 >>> 7 ^ w2 >>> 18 ^ w2 >>> 3 ^ w2 << 25 ^ w2 << 14) + (w15 >>> 17 ^ w15 >>> 19 ^ w15 >>> 10 ^ w15 << 15 ^ w15 << 13) + w1 + w10) | 0;
		g = (w1 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0xefbe4786) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w2 = ((w3 >>> 7 ^ w3 >>> 18 ^ w3 >>> 3 ^ w3 << 25 ^ w3 << 14) + (w0 >>> 17 ^ w0 >>> 19 ^ w0 >>> 10 ^ w0 << 15 ^ w0 << 13) + w2 + w11) | 0;
		f = (w2 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0x0fc19dc6) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w3 = ((w4 >>> 7 ^ w4 >>> 18 ^ w4 >>> 3 ^ w4 << 25 ^ w4 << 14) + (w1 >>> 17 ^ w1 >>> 19 ^ w1 >>> 10 ^ w1 << 15 ^ w1 << 13) + w3 + w12) | 0;
		e = (w3 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0x240ca1cc) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w4 = ((w5 >>> 7 ^ w5 >>> 18 ^ w5 >>> 3 ^ w5 << 25 ^ w5 << 14) + (w2 >>> 17 ^ w2 >>> 19 ^ w2 >>> 10 ^ w2 << 15 ^ w2 << 13) + w4 + w13) | 0;
		d = (w4 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x2de92c6f) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w5 = ((w6 >>> 7 ^ w6 >>> 18 ^ w6 >>> 3 ^ w6 << 25 ^ w6 << 14) + (w3 >>> 17 ^ w3 >>> 19 ^ w3 >>> 10 ^ w3 << 15 ^ w3 << 13) + w5 + w14) | 0;
		c = (w5 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0x4a7484aa) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w6 = ((w7 >>> 7 ^ w7 >>> 18 ^ w7 >>> 3 ^ w7 << 25 ^ w7 << 14) + (w4 >>> 17 ^ w4 >>> 19 ^ w4 >>> 10 ^ w4 << 15 ^ w4 << 13) + w6 + w15) | 0;
		b = (w6 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x5cb0a9dc) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w7 = ((w8 >>> 7 ^ w8 >>> 18 ^ w8 >>> 3 ^ w8 << 25 ^ w8 << 14) + (w5 >>> 17 ^ w5 >>> 19 ^ w5 >>> 10 ^ w5 << 15 ^ w5 << 13) + w7 + w0) | 0;
		a = (w7 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0x76f988da) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w8 = ((w9 >>> 7 ^ w9 >>> 18 ^ w9 >>> 3 ^ w9 << 25 ^ w9 << 14) + (w6 >>> 17 ^ w6 >>> 19 ^ w6 >>> 10 ^ w6 << 15 ^ w6 << 13) + w8 + w1) | 0;
		h = (w8 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0x983e5152) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w9 = ((w10 >>> 7 ^ w10 >>> 18 ^ w10 >>> 3 ^ w10 << 25 ^ w10 << 14) + (w7 >>> 17 ^ w7 >>> 19 ^ w7 >>> 10 ^ w7 << 15 ^ w7 << 13) + w9 + w2) | 0;
		g = (w9 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0xa831c66d) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w10 = ((w11 >>> 7 ^ w11 >>> 18 ^ w11 >>> 3 ^ w11 << 25 ^ w11 << 14) + (w8 >>> 17 ^ w8 >>> 19 ^ w8 >>> 10 ^ w8 << 15 ^ w8 << 13) + w10 + w3) | 0;
		f = (w10 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0xb00327c8) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w11 = ((w12 >>> 7 ^ w12 >>> 18 ^ w12 >>> 3 ^ w12 << 25 ^ w12 << 14) + (w9 >>> 17 ^ w9 >>> 19 ^ w9 >>> 10 ^ w9 << 15 ^ w9 << 13) + w11 + w4) | 0;
		e = (w11 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0xbf597fc7) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w12 = ((w13 >>> 7 ^ w13 >>> 18 ^ w13 >>> 3 ^ w13 << 25 ^ w13 << 14) + (w10 >>> 17 ^ w10 >>> 19 ^ w10 >>> 10 ^ w10 << 15 ^ w10 << 13) + w12 + w5) | 0;
		d = (w12 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0xc6e00bf3) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w13 = ((w14 >>> 7 ^ w14 >>> 18 ^ w14 >>> 3 ^ w14 << 25 ^ w14 << 14) + (w11 >>> 17 ^ w11 >>> 19 ^ w11 >>> 10 ^ w11 << 15 ^ w11 << 13) + w13 + w6) | 0;
		c = (w13 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0xd5a79147) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w14 = ((w15 >>> 7 ^ w15 >>> 18 ^ w15 >>> 3 ^ w15 << 25 ^ w15 << 14) + (w12 >>> 17 ^ w12 >>> 19 ^ w12 >>> 10 ^ w12 << 15 ^ w12 << 13) + w14 + w7) | 0;
		b = (w14 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x06ca6351) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w15 = ((w0 >>> 7 ^ w0 >>> 18 ^ w0 >>> 3 ^ w0 << 25 ^ w0 << 14) + (w13 >>> 17 ^ w13 >>> 19 ^ w13 >>> 10 ^ w13 << 15 ^ w13 << 13) + w15 + w8) | 0;
		a = (w15 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0x14292967) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w0 = ((w1 >>> 7 ^ w1 >>> 18 ^ w1 >>> 3 ^ w1 << 25 ^ w1 << 14) + (w14 >>> 17 ^ w14 >>> 19 ^ w14 >>> 10 ^ w14 << 15 ^ w14 << 13) + w0 + w9) | 0;
		h = (w0 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0x27b70a85) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w1 = ((w2 >>> 7 ^ w2 >>> 18 ^ w2 >>> 3 ^ w2 << 25 ^ w2 << 14) + (w15 >>> 17 ^ w15 >>> 19 ^ w15 >>> 10 ^ w15 << 15 ^ w15 << 13) + w1 + w10) | 0;
		g = (w1 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0x2e1b2138) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w2 = ((w3 >>> 7 ^ w3 >>> 18 ^ w3 >>> 3 ^ w3 << 25 ^ w3 << 14) + (w0 >>> 17 ^ w0 >>> 19 ^ w0 >>> 10 ^ w0 << 15 ^ w0 << 13) + w2 + w11) | 0;
		f = (w2 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0x4d2c6dfc) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w3 = ((w4 >>> 7 ^ w4 >>> 18 ^ w4 >>> 3 ^ w4 << 25 ^ w4 << 14) + (w1 >>> 17 ^ w1 >>> 19 ^ w1 >>> 10 ^ w1 << 15 ^ w1 << 13) + w3 + w12) | 0;
		e = (w3 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0x53380d13) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w4 = ((w5 >>> 7 ^ w5 >>> 18 ^ w5 >>> 3 ^ w5 << 25 ^ w5 << 14) + (w2 >>> 17 ^ w2 >>> 19 ^ w2 >>> 10 ^ w2 << 15 ^ w2 << 13) + w4 + w13) | 0;
		d = (w4 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x650a7354) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w5 = ((w6 >>> 7 ^ w6 >>> 18 ^ w6 >>> 3 ^ w6 << 25 ^ w6 << 14) + (w3 >>> 17 ^ w3 >>> 19 ^ w3 >>> 10 ^ w3 << 15 ^ w3 << 13) + w5 + w14) | 0;
		c = (w5 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0x766a0abb) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w6 = ((w7 >>> 7 ^ w7 >>> 18 ^ w7 >>> 3 ^ w7 << 25 ^ w7 << 14) + (w4 >>> 17 ^ w4 >>> 19 ^ w4 >>> 10 ^ w4 << 15 ^ w4 << 13) + w6 + w15) | 0;
		b = (w6 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x81c2c92e) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w7 = ((w8 >>> 7 ^ w8 >>> 18 ^ w8 >>> 3 ^ w8 << 25 ^ w8 << 14) + (w5 >>> 17 ^ w5 >>> 19 ^ w5 >>> 10 ^ w5 << 15 ^ w5 << 13) + w7 + w0) | 0;
		a = (w7 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0x92722c85) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w8 = ((w9 >>> 7 ^ w9 >>> 18 ^ w9 >>> 3 ^ w9 << 25 ^ w9 << 14) + (w6 >>> 17 ^ w6 >>> 19 ^ w6 >>> 10 ^ w6 << 15 ^ w6 << 13) + w8 + w1) | 0;
		h = (w8 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0xa2bfe8a1) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w9 = ((w10 >>> 7 ^ w10 >>> 18 ^ w10 >>> 3 ^ w10 << 25 ^ w10 << 14) + (w7 >>> 17 ^ w7 >>> 19 ^ w7 >>> 10 ^ w7 << 15 ^ w7 << 13) + w9 + w2) | 0;
		g = (w9 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0xa81a664b) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w10 = ((w11 >>> 7 ^ w11 >>> 18 ^ w11 >>> 3 ^ w11 << 25 ^ w11 << 14) + (w8 >>> 17 ^ w8 >>> 19 ^ w8 >>> 10 ^ w8 << 15 ^ w8 << 13) + w10 + w3) | 0;
		f = (w10 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0xc24b8b70) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w11 = ((w12 >>> 7 ^ w12 >>> 18 ^ w12 >>> 3 ^ w12 << 25 ^ w12 << 14) + (w9 >>> 17 ^ w9 >>> 19 ^ w9 >>> 10 ^ w9 << 15 ^ w9 << 13) + w11 + w4) | 0;
		e = (w11 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0xc76c51a3) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w12 = ((w13 >>> 7 ^ w13 >>> 18 ^ w13 >>> 3 ^ w13 << 25 ^ w13 << 14) + (w10 >>> 17 ^ w10 >>> 19 ^ w10 >>> 10 ^ w10 << 15 ^ w10 << 13) + w12 + w5) | 0;
		d = (w12 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0xd192e819) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w13 = ((w14 >>> 7 ^ w14 >>> 18 ^ w14 >>> 3 ^ w14 << 25 ^ w14 << 14) + (w11 >>> 17 ^ w11 >>> 19 ^ w11 >>> 10 ^ w11 << 15 ^ w11 << 13) + w13 + w6) | 0;
		c = (w13 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0xd6990624) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w14 = ((w15 >>> 7 ^ w15 >>> 18 ^ w15 >>> 3 ^ w15 << 25 ^ w15 << 14) + (w12 >>> 17 ^ w12 >>> 19 ^ w12 >>> 10 ^ w12 << 15 ^ w12 << 13) + w14 + w7) | 0;
		b = (w14 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0xf40e3585) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w15 = ((w0 >>> 7 ^ w0 >>> 18 ^ w0 >>> 3 ^ w0 << 25 ^ w0 << 14) + (w13 >>> 17 ^ w13 >>> 19 ^ w13 >>> 10 ^ w13 << 15 ^ w13 << 13) + w15 + w8) | 0;
		a = (w15 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0x106aa070) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w0 = ((w1 >>> 7 ^ w1 >>> 18 ^ w1 >>> 3 ^ w1 << 25 ^ w1 << 14) + (w14 >>> 17 ^ w14 >>> 19 ^ w14 >>> 10 ^ w14 << 15 ^ w14 << 13) + w0 + w9) | 0;
		h = (w0 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0x19a4c116) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w1 = ((w2 >>> 7 ^ w2 >>> 18 ^ w2 >>> 3 ^ w2 << 25 ^ w2 << 14) + (w15 >>> 17 ^ w15 >>> 19 ^ w15 >>> 10 ^ w15 << 15 ^ w15 << 13) + w1 + w10) | 0;
		g = (w1 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0x1e376c08) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w2 = ((w3 >>> 7 ^ w3 >>> 18 ^ w3 >>> 3 ^ w3 << 25 ^ w3 << 14) + (w0 >>> 17 ^ w0 >>> 19 ^ w0 >>> 10 ^ w0 << 15 ^ w0 << 13) + w2 + w11) | 0;
		f = (w2 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0x2748774c) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w3 = ((w4 >>> 7 ^ w4 >>> 18 ^ w4 >>> 3 ^ w4 << 25 ^ w4 << 14) + (w1 >>> 17 ^ w1 >>> 19 ^ w1 >>> 10 ^ w1 << 15 ^ w1 << 13) + w3 + w12) | 0;
		e = (w3 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0x34b0bcb5) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w4 = ((w5 >>> 7 ^ w5 >>> 18 ^ w5 >>> 3 ^ w5 << 25 ^ w5 << 14) + (w2 >>> 17 ^ w2 >>> 19 ^ w2 >>> 10 ^ w2 << 15 ^ w2 << 13) + w4 + w13) | 0;
		d = (w4 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x391c0cb3) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w5 = ((w6 >>> 7 ^ w6 >>> 18 ^ w6 >>> 3 ^ w6 << 25 ^ w6 << 14) + (w3 >>> 17 ^ w3 >>> 19 ^ w3 >>> 10 ^ w3 << 15 ^ w3 << 13) + w5 + w14) | 0;
		c = (w5 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0x4ed8aa4a) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w6 = ((w7 >>> 7 ^ w7 >>> 18 ^ w7 >>> 3 ^ w7 << 25 ^ w7 << 14) + (w4 >>> 17 ^ w4 >>> 19 ^ w4 >>> 10 ^ w4 << 15 ^ w4 << 13) + w6 + w15) | 0;
		b = (w6 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0x5b9cca4f) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w7 = ((w8 >>> 7 ^ w8 >>> 18 ^ w8 >>> 3 ^ w8 << 25 ^ w8 << 14) + (w5 >>> 17 ^ w5 >>> 19 ^ w5 >>> 10 ^ w5 << 15 ^ w5 << 13) + w7 + w0) | 0;
		a = (w7 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0x682e6ff3) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		w8 = ((w9 >>> 7 ^ w9 >>> 18 ^ w9 >>> 3 ^ w9 << 25 ^ w9 << 14) + (w6 >>> 17 ^ w6 >>> 19 ^ w6 >>> 10 ^ w6 << 15 ^ w6 << 13) + w8 + w1) | 0;
		h = (w8 + h + (e >>> 6 ^ e >>> 11 ^ e >>> 25 ^ e << 26 ^ e << 21 ^ e << 7) + (g ^ e & (f ^ g)) + 0x748f82ee) | 0;
		d = (d + h) | 0;
		h = (h + ((a & b) ^ (c & (a ^ b))) + (a >>> 2 ^ a >>> 13 ^ a >>> 22 ^ a << 30 ^ a << 19 ^ a << 10)) | 0;
		w9 = ((w10 >>> 7 ^ w10 >>> 18 ^ w10 >>> 3 ^ w10 << 25 ^ w10 << 14) + (w7 >>> 17 ^ w7 >>> 19 ^ w7 >>> 10 ^ w7 << 15 ^ w7 << 13) + w9 + w2) | 0;
		g = (w9 + g + (d >>> 6 ^ d >>> 11 ^ d >>> 25 ^ d << 26 ^ d << 21 ^ d << 7) + (f ^ d & (e ^ f)) + 0x78a5636f) | 0;
		c = (c + g) | 0;
		g = (g + ((h & a) ^ (b & (h ^ a))) + (h >>> 2 ^ h >>> 13 ^ h >>> 22 ^ h << 30 ^ h << 19 ^ h << 10)) | 0;
		w10 = ((w11 >>> 7 ^ w11 >>> 18 ^ w11 >>> 3 ^ w11 << 25 ^ w11 << 14) + (w8 >>> 17 ^ w8 >>> 19 ^ w8 >>> 10 ^ w8 << 15 ^ w8 << 13) + w10 + w3) | 0;
		f = (w10 + f + (c >>> 6 ^ c >>> 11 ^ c >>> 25 ^ c << 26 ^ c << 21 ^ c << 7) + (e ^ c & (d ^ e)) + 0x84c87814) | 0;
		b = (b + f) | 0;
		f = (f + ((g & h) ^ (a & (g ^ h))) + (g >>> 2 ^ g >>> 13 ^ g >>> 22 ^ g << 30 ^ g << 19 ^ g << 10)) | 0;
		w11 = ((w12 >>> 7 ^ w12 >>> 18 ^ w12 >>> 3 ^ w12 << 25 ^ w12 << 14) + (w9 >>> 17 ^ w9 >>> 19 ^ w9 >>> 10 ^ w9 << 15 ^ w9 << 13) + w11 + w4) | 0;
		e = (w11 + e + (b >>> 6 ^ b >>> 11 ^ b >>> 25 ^ b << 26 ^ b << 21 ^ b << 7) + (d ^ b & (c ^ d)) + 0x8cc70208) | 0;
		a = (a + e) | 0;
		e = (e + ((f & g) ^ (h & (f ^ g))) + (f >>> 2 ^ f >>> 13 ^ f >>> 22 ^ f << 30 ^ f << 19 ^ f << 10)) | 0;
		w12 = ((w13 >>> 7 ^ w13 >>> 18 ^ w13 >>> 3 ^ w13 << 25 ^ w13 << 14) + (w10 >>> 17 ^ w10 >>> 19 ^ w10 >>> 10 ^ w10 << 15 ^ w10 << 13) + w12 + w5) | 0;
		d = (w12 + d + (a >>> 6 ^ a >>> 11 ^ a >>> 25 ^ a << 26 ^ a << 21 ^ a << 7) + (c ^ a & (b ^ c)) + 0x90befffa) | 0;
		h = (h + d) | 0;
		d = (d + ((e & f) ^ (g & (e ^ f))) + (e >>> 2 ^ e >>> 13 ^ e >>> 22 ^ e << 30 ^ e << 19 ^ e << 10)) | 0;
		w13 = ((w14 >>> 7 ^ w14 >>> 18 ^ w14 >>> 3 ^ w14 << 25 ^ w14 << 14) + (w11 >>> 17 ^ w11 >>> 19 ^ w11 >>> 10 ^ w11 << 15 ^ w11 << 13) + w13 + w6) | 0;
		c = (w13 + c + (h >>> 6 ^ h >>> 11 ^ h >>> 25 ^ h << 26 ^ h << 21 ^ h << 7) + (b ^ h & (a ^ b)) + 0xa4506ceb) | 0;
		g = (g + c) | 0;
		c = (c + ((d & e) ^ (f & (d ^ e))) + (d >>> 2 ^ d >>> 13 ^ d >>> 22 ^ d << 30 ^ d << 19 ^ d << 10)) | 0;
		w14 = ((w15 >>> 7 ^ w15 >>> 18 ^ w15 >>> 3 ^ w15 << 25 ^ w15 << 14) + (w12 >>> 17 ^ w12 >>> 19 ^ w12 >>> 10 ^ w12 << 15 ^ w12 << 13) + w14 + w7) | 0;
		b = (w14 + b + (g >>> 6 ^ g >>> 11 ^ g >>> 25 ^ g << 26 ^ g << 21 ^ g << 7) + (a ^ g & (h ^ a)) + 0xbef9a3f7) | 0;
		f = (f + b) | 0;
		b = (b + ((c & d) ^ (e & (c ^ d))) + (c >>> 2 ^ c >>> 13 ^ c >>> 22 ^ c << 30 ^ c << 19 ^ c << 10)) | 0;
		w15 = ((w0 >>> 7 ^ w0 >>> 18 ^ w0 >>> 3 ^ w0 << 25 ^ w0 << 14) + (w13 >>> 17 ^ w13 >>> 19 ^ w13 >>> 10 ^ w13 << 15 ^ w13 << 13) + w15 + w8) | 0;
		a = (w15 + a + (f >>> 6 ^ f >>> 11 ^ f >>> 25 ^ f << 26 ^ f << 21 ^ f << 7) + (h ^ f & (g ^ h)) + 0xc67178f2) | 0;
		e = (e + a) | 0;
		a = (a + ((b & c) ^ (d & (b ^ c))) + (b >>> 2 ^ b >>> 13 ^ b >>> 22 ^ b << 30 ^ b << 19 ^ b << 10)) | 0;
		A = (A + a) | 0;
		B = (B + b) | 0;
		C = (C + c) | 0;
		D = (D + d) | 0;
		E = (E + e) | 0;
		F = (F + f) | 0;
		G = (G + g) | 0;
		H = (H + h) | 0
	}

	function reset() {
		A = 0x6a09e667;
		B = 0xbb67ae85;
		C = 0x3c6ef372;
		D = 0xa54ff53a;
		E = 0x510e527f;
		F = 0x9b05688c;
		G = 0x1f83d9ab;
		H = 0x5be0cd19;
		I = J = 0
	}

	function update(j, l) {
		j = j | 0;
		l = l | 0;
		var h = 0;
		if (j & 63) return -1;
		while ((l | 0) >= 64) {
			z(j);
			j = (j + 64) | 0;
			l = (l - 64) | 0;
			h = (h + 64) | 0
		}
		I = (I + h) | 0;
		if (I >>> 0 < h >>> 0) J = (J + 1) | 0;
		return h | 0
	}

	function digest(j, l, o) {
		j = j | 0;
		l = l | 0;
		o = o | 0;
		var h = 0,
			i = 0;
		if (j & 63) return -1;
		if (~o)
			if (o & 31) return -1;
		if ((l | 0) >= 64) {
			h = update(j, l) | 0;
			if ((h | 0) == -1) return -1;
			j = (j + h) | 0;
			l = (l - h) | 0
		}
		h = (h + l) | 0;
		I = (I + l) | 0;
		if (I >>> 0 < l >>> 0) J = (J + 1) | 0;
		K[j | l] = 128;
		if ((l | 0) >= 56) {
			for (i = (l + 1) | 0;
				(i | 0) < 64; i = (i + 1) | 0) K[j | i] = 0;
			z(j);
			l = 0;
			K[j | 0] = 0
		}
		for (i = (l + 1) | 0;
			(i | 0) < 59; i = (i + 1) | 0) K[j | i] = 0;
		K[j | 56] = J >>> 21 & 255;
		K[j | 57] = J >>> 13 & 255;
		K[j | 58] = J >>> 5 & 255;
		K[j | 59] = J << 3 & 255 | I >>> 29;
		K[j | 60] = I >>> 21 & 255;
		K[j | 61] = I >>> 13 & 255;
		K[j | 62] = I >>> 5 & 255;
		K[j | 63] = I << 3 & 255;
		z(j);
		if (~o) {
			o = o | 0;
			K[o | 0] = A >>> 24;
			K[o | 1] = A >>> 16 & 255;
			K[o | 2] = A >>> 8 & 255;
			K[o | 3] = A & 255;
			K[o | 4] = B >>> 24;
			K[o | 5] = B >>> 16 & 255;
			K[o | 6] = B >>> 8 & 255;
			K[o | 7] = B & 255;
			K[o | 8] = C >>> 24;
			K[o | 9] = C >>> 16 & 255;
			K[o | 10] = C >>> 8 & 255;
			K[o | 11] = C & 255;
			K[o | 12] = D >>> 24;
			K[o | 13] = D >>> 16 & 255;
			K[o | 14] = D >>> 8 & 255;
			K[o | 15] = D & 255;
			K[o | 16] = E >>> 24;
			K[o | 17] = E >>> 16 & 255;
			K[o | 18] = E >>> 8 & 255;
			K[o | 19] = E & 255;
			K[o | 20] = F >>> 24;
			K[o | 21] = F >>> 16 & 255;
			K[o | 22] = F >>> 8 & 255;
			K[o | 23] = F & 255;
			K[o | 24] = G >>> 24;
			K[o | 25] = G >>> 16 & 255;
			K[o | 26] = G >>> 8 & 255;
			K[o | 27] = G & 255;
			K[o | 28] = H >>> 24;
			K[o | 29] = H >>> 16 & 255;
			K[o | 30] = H >>> 8 & 255;
			K[o | 31] = H & 255
		}
		return h | 0
	}
	return {
		reset: reset,
		update: update,
		digest: digest
	}
}, a => {
	let b = new ArrayBuffer(65536),
		c = new Uint8Array(b),
		f = a({
			Uint8Array
		}, null, b),
		e = 0,
		h = 0;
	f.reset();
	return m => {
		m = new Uint8Array(m);
		let r = 0,
			z = m.length;
		for (; 0 < z;) {
			var x = c.length - h;
			x = x < z ? x : z;
			c.set(m.subarray(r, r + x), h);
			h += x;
			r += x;
			z -= x;
			e += f.update(e, h - e);
			e === h && (h = e = 0)
		}
		f.digest(e, h - e, 0);
		m = c.slice(0, 32).buffer;
		h = e = 0;
		f.reset();
		return m
	}
});